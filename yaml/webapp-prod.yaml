apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        app: bl-scale-flask
    name: bl-scale-flask
spec:
    replicas: 1
    selector:
        matchLabels:
            app: bl-scale-flask
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            labels:
                app: bl-scale-flask
        spec:
            containers:
            - env:
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: "/var/run/secret/cloud.google.com/bl-scale_key.json"
                - name: FIREBASE_API_KEY
                  valueFrom:
                      secretKeyRef:
                        name: firebase-api-key
                        key: FIREBASE_API_KEY
                - name: SECRET_KEY
                  valueFrom:
                      secretKeyRef:
                        name: flask-session-secrets
                        key: secret-key
                - name: SESSION_REDIS
                  valueFrom:
                      secretKeyRef:
                        name: flask-session-secrets
                        key: redis-url
              volumeMounts:
              - name: "cred-key"
                mountPath: "/var/run/secret/cloud.google.com"
              image: gcr.io/breakthrough-listen-sandbox/bl-scale:webapp-stable
              imagePullPolicy: Always
              name: bl-scale-flask
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            volumes:
              - name: "cred-key"
                secret:
                  secretName: "bl-scale-cred-key"
            nodeSelector:
                cloud.google.com/gke-nodepool: webapp-pool
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
